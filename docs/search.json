[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Principles and Techniques of Data Science",
    "section": "",
    "text": "Welcome"
  },
  {
    "objectID": "index.html#about-the-course-notes",
    "href": "index.html#about-the-course-notes",
    "title": "Principles and Techniques of Data Science",
    "section": "About the Course Notes",
    "text": "About the Course Notes\nThis text was developed for the Spring 2023 Edition of the UC Berkeley course Data 100: Principles and Techniques of Data Science.\nAs this project is in development during the Spring 2023 semester, the course notes may be in flux. We appreciate your understanding. If you spot any errors or would like to suggest any changes, please email us.   Email: data100.instructors@berkeley.edu"
  },
  {
    "objectID": "case_study_HCE/case_study_HCE.html#the-problem",
    "href": "case_study_HCE/case_study_HCE.html#the-problem",
    "title": "18  Case Study in Human Contexts and Ethics",
    "section": "18.1 The Problem",
    "text": "18.1 The Problem\nIn a report by the Chicago Tribune uncovered a major scandal. The team showed that the model perpetuated a highly regressive tax system which disproportionately burdened African American and Latinx homeowners in Cook County. How did they know?\n \nIn the field of housing assessment, there are standard metrics that assessors use across the world to estimate the fairness of assessments: coefficient of dispersion and price-related differential. These metrics have been rigorously tested by experts in the field, and are out of scope for our class. Calculating these metrics for the Cook County prices and found that the pricing created by the CCAO did not fall in acceptable ranges (See figure above). This by itself is not the end of the story, but a good indicator that something fishy was going on.\n \nThis then prompted them to investigate if the model itself was producing fair tax rates. Evidently, when accounting for the home owner’s income they found that the model actually produced a regressive tax rate (See figure above).\n\n\n\n\n\n\nDefinition\n\n\n\n\n\nRegressive (tax): A tax rate is regressive if the percentage tax rate is higher for individuals with lower net income.\nProgressive (tax): A tax rate is progressive if the percentage tax rate is higher for individuals with higher net income.\n\n\n\n  \nDigging further shows that not only was the system unfair to people across the axis of income, it was also unfair across the axis of race(See figure above). The likelihood that your home was under or over assessed was highly dependent on your race did not sit will with many home owners.\n\n18.1.1 Spotlight: Appeals\nWhat actually caused this to come about? The whole answer is a lot bigger than just models. At the end of the day, these are real systems that have a lot of moving parts. One of those moving parts was the appeals system. Homeowners are mailed the value their home is assess for by CCAO, and the homeowner can choose to appeal to a board of elected officials to try and change the listed value of their home, and thus how much they are taxed. In theory, this sounds like a very fair system: there is a human that oversees the final pricing of houses rather than just an algorithm. However, it ended up exacerbating the problems.\n“Appeals are a good thing,” Thomas Jaconetty, deputy assessor for valuation and appeals, said in an interview. “The goal here is fairness. We made the numbers. We can change them.”\n  \nHere we can borrow lessons from Critical Race Theory. On the surface, everyone having the legal right to try and appeal is undeniable. However, not everyone has an equal ability to. Those who have the money to hire tax lawyers to appeal for them have a drastically higher chance trying and succeeding (See above figure). This model is part of a deeper institutional pattern rife with potential corruption.\n  \nHomeowners who appealed were generally underassessed relative to other homeowners (See above figure). Those with higher incomes pay less in property tax, tax lawyers are able to grow their business due to their role in appeals, and politicians are commonly socially connected to the aforementioned tax lawyers and wealthy homeowners. All these stakeholders have reasons to advertise the model as a integral part of a fair system. Here lies the value in asking questions. A system that seems fair on the surface may in actuality be unfair upon taking a closer look.\n\n\n18.1.2 Human Impacts\n  \nThe impact of the housing model extends beyond the realm of home ownership and taxation. Discriminatory practices have a long history within the United States, and the model served to perpetuate this fact. To this day, Chicago is one of the most segregated cities in the United States (source). These factors are central to informing us, as data scientists, about what is at stake.\n\n\n18.1.3 Spotlight: Intersection of Real Estate and Race\nHousing has been a persistent source of racial inequality throughout US History, amongst other factors. It is one of the main areas where inequalities are created and reproduced. In the beginning, Jim Crow laws were explicit in forbidding Persons of Color from Schools, public utilities, etc.\n\nToday, while advancements in Civil Rights have been made, the spirit of the laws are alive in many parts of the US. The real estate industry was “professionalized” in the 1920’s and 1930’s by aspiring to become a science guided by strict methods and principles:\n\nRedlining: making it difficult or impossible to get a federally-backed mortgage to buy a house in specific neighborhoods coded as “risky” (red).\n\nWhat made them “risky” according to the makers of these was racial composition.\nSegregation was not only a result of federal policy, but developed by real estate professionals.\n\nThe methods centered on creating objective rating systems (information technologies) for the appraisal of property values which encoded race as a factor of valuation (See figure below)\n\nThis, in turn, influenced federal policy and practice\n\n\n\nSource: Colin Koopman, How We Became Our Data (2019) p. 137"
  },
  {
    "objectID": "case_study_HCE/case_study_HCE.html#the-response-cook-county-open-data-initiative",
    "href": "case_study_HCE/case_study_HCE.html#the-response-cook-county-open-data-initiative",
    "title": "18  Case Study in Human Contexts and Ethics",
    "section": "18.2 The Response: Cook County Open Data Initiative",
    "text": "18.2 The Response: Cook County Open Data Initiative\nThe response started in politics. A new assessor, Fritz Kaegi, was elected and created a new mandate with two goals:\n\nDistributional equity in property taxation = properties of same value treated alike during assessments\nCreates new Office of Data Science\n\n\n\n18.2.1 Question/Problem Formulation\n\nWhat do we want to know?\nWhat problems are we trying to solve?\nWhat are the hypotheses we want to test?\nWhat are our metrics for success?\n\nThe new Office of Data Science started by redefining their goals.\n\nAccurately, uniformly, and impartially assess the value of a home.\n\nFollowing international standards (coefficient of dispersion)\nPredicting value of all homes with as little total error as possible.\n\nCreate a system that assesses house values that is fair to all people, across perceived racial and income differences.\n\nDisrupts the circuit of corruption (Board of Review appeals process)\nEliminates regressivity\nEngenders trust in the system among all stakeholders\n\n\n\n\n\n\n\n\nDefinitions\n\n\n\n\n\nDefinitions: Fairness and Transparency\nFairness: The ability of our pipeline to accurately assess property values, accounting for disparities in geography, information, etc.\nTransparency: The ability of the data science department to share and explain pipeline results and decisions to both internal and external stakeholders\n\n\n\n\n\n18.2.2 Data Acquisition and Cleaning\n\nWhat data do we have and what data do we need?\nHow will we sample more data?\nIs our data representative of the population we want to study?\n\nExample: Sales data\n\nThey also critically examined their original sales data:\n\nHow was this data collected?\nWhen was this data collected?\nWho collected this data?\nFor what purposes was the data collected?\nHow and why were particular categories created?\n\nFor example, attributes can affect likelihood of appearing in the data. For example, housing data in the floodplains geographic region of Chicago were less represented than other regions.\nThe features can even be reported at different rates. Improvements in homes, which tend to increase property value, were unlikely to be reported by the homeowners.\nAdditionally, they found that there was simply more missing data in lower income neighborhoods.\n\n\n18.2.3 Exploratory Data Analysis\n\nHow is our data organized and what does it contain?\nDo we already have relevant data?\nWhat are the biases, anomalies, or other issues with the data?\nHow do we transform the data to enable effective analysis?\n\nBefore the modeling step, they investigated a multitude of crucial questions:\n\nWhich attributes are most predictive of sales price?\nIs the data uniformly distributed?\nDo all neighborhoods have up to date data? Do all neighborhoods have the same granularity?\n\nDo some neighborhoods have missing or outdated data?\n\nFirstly, they found that the impact of certain features, such as bedroom number, were much more impactful in determining house value inside certain neighborhoods more than others. This informed them that different models should be used depending on the neighborhood.\nThey also noticed that low income neighborhoods had disproportionately spottier data. This informed them that they needed to develop new data collection practices–including finding new sources of data.\n\n\n18.2.4 Prediction and Inference\n\nWhat does the data say about the world?\nDoes it answer our questions or accurately solve the problem?\nHow robust are our conclusions and can we trust the predictions?\n\nRather than using a singular model to predict sale prices (“fair market value”) of unsold properties, the CCAO fit machine learning models that discover patterns using known sale prices and characteristics of similar and nearby properties. It uses different model weights for each township.\nCompared to traditional mass appraisal, the CCAO’s new approach is more granular and more sensitive to neighborhood variations.\n\n\n18.2.5 Reports Decisions, and Conclusions\n\nHow successful is the system for each goal?\n\naccuracy/uniformity of the model.\nfairness and transparency that eliminates regressivity and engenders trust.\n\nHow do you know?\n\nThe model is not the end of the road. The new Office still sends homeowners their house evaluations, but now the data that they get sent back from the homeowners is taken into account. More detailed reports are being written by the office itself to democratize the information. Town halls and other public facing outreach helps involves the whole community in the process of housing evaluations, rather than limiting participation to a select few."
  },
  {
    "objectID": "case_study_HCE/case_study_HCE.html#key-takeaways",
    "href": "case_study_HCE/case_study_HCE.html#key-takeaways",
    "title": "18  Case Study in Human Contexts and Ethics",
    "section": "18.3 Key Takeaways",
    "text": "18.3 Key Takeaways\n\nAccuracy is a necessary, but not sufficient, condition of a fair system.\nFairness and transparency are context-dependent and sociotechnical concepts\nLearn to work with contexts, and consider how your data analysis will reshape them\nKeep in mind the power, and limits, of data analysis"
  },
  {
    "objectID": "case_study_HCE/case_study_HCE.html#lessons-for-data-science-practice",
    "href": "case_study_HCE/case_study_HCE.html#lessons-for-data-science-practice",
    "title": "18  Case Study in Human Contexts and Ethics",
    "section": "18.4 Lessons for Data Science Practice",
    "text": "18.4 Lessons for Data Science Practice\n\nQuestion/Problem formulation\n\nWho is responsible for framing the problem?\nWho are the stakeholders? How are they involved in the problem framing?\nWhat do you bring to the table? How does your positionality affect your understanding of the problem?\nWhat are the narratives that you’re tapping into?\n\nData Acquisition and Cleaning\n\nWhere does the data come from?\nWho collected it? For what purpose?\nWhat kinds of collecting and recording systems and techniques were used?\nHow has this data been used in the past?\nWhat restrictions are there on access to the data, and what enables you to have access?\n\nExploratory Data Analysis & Visualization\n\nWhat kind of personal or group identities have become salient in this data?\nWhich variables became salient, and what kinds of relationship obtain between them?\nDo any of the relationships made visible lend themselves to arguments that might be potentially harmful to a particular community?\n\nPrediction and Inference\n\nWhat does the prediction or inference do in the world?\nAre the results useful for the intended purposes?\nAre there benchmarks to compare the results?\nHow are your predictions and inferences dependent upon the larger system in which your model works?\n\nReports, Decisions, and Solutions\n\nHow do we know if we have accomplished our goals?\nHow does your work fit in the broader literature?\nWhere does your work agree or disagree with the status quo?\nDo your conclusions make sense?"
  },
  {
    "objectID": "probability_2/probability_2.html#sample-statistics",
    "href": "probability_2/probability_2.html#sample-statistics",
    "title": "17  Probability II",
    "section": "17.1 Sample Statistics",
    "text": "17.1 Sample Statistics\nIn the last lecture, we talked at length about the concept of a distribution – a statement of all possible values that a random variable can take, as well as the probability of the variable taking on each value. Let’s take a moment to refine this definition.\n\nThe distribution of a population describes how a random variable behaves across all individuals of interest.\nThe distribution of a sample describes how a random variable behaves in a specific sample from the population.\n\nIn data science, we seldom have access to the entire population we wish to investigate. If we want to understand the distribution of a random variable across the population, we often need to use the distribution of collected samples to infer the properties of the population. For example, say we wish to understand the distribution of heights of people across the US population. We can’t directly survey every single person in the country, so we might instead take smaller samples of heights and use these samples to estimate the population’s distribution.\nA common situation is wishing to know the mean of a population (eg the average height of all people in the US). In this case, we can take several samples of size \\(n\\) from the population, and compute the mean of each sample.\nIn Data 8, you encountered the Central Limit Theorem (CLT). This is a powerful theorem for estimating the distribution of a population with mean \\(\\mu\\) and standard deviation \\(\\sigma\\) from a collection of smaller samples. The CLT tells us that if an IID sample of size \\(n\\) is large, then the probability distribution of the sample mean is roughly normal with mean \\(\\mu\\) and SD \\(\\sigma/\\sqrt{n}\\). In simpler terms, this means:\n\nDraw a sample of size \\(n\\) from the population\nCompute the mean of this sample; call it \\(\\bar{X}_n\\)\nRepeat this process: draw many more samples and compute the mean of each\nThe distribution of these sample means is normal with standard deviation \\(\\sigma/\\sqrt{n}\\) and mean equal to the population mean, \\(\\mu\\)\n\n\nImportantly, the CLT assumes that each observation in our samples is drawn IID from the distribution of the population. In addition, the CLT is accurate only when \\(n\\) is “large.” What counts as a “large” sample size depends on the specific distribution. If a population is highly symmetric and unimodal, we could need as few as \\(n=20\\); if a population is very skewed, we need a larger \\(n\\). Classes like Data 140 investigate this idea in great detail.\nWhy is this helpful? Consider what might happen if we estimated the population distribution from just one sample. If we happened, by random chance, to draw a sample with a different mean or spread than that of the population, we might get a skewed view of how the population behaves (consider the extreme case where we happen to sample the exact same value \\(n\\) times!). By drawing many samples, we can consider how the sample distribution varies across multiple subsets of the data. This allows us to approximate the properties of the population without the need to survey every single member.\n\nNotice the difference in variation between the two distributions that are different in sample size. The distribution with bigger sample size (\\(n=800\\)) is tighter around the mean than the distribution with smaller sample size (\\(n=200\\)). Try plugging in these values into the standard deviation equation for the normal distribution to make sense of this!"
  },
  {
    "objectID": "probability_2/probability_2.html#prediction-and-inference",
    "href": "probability_2/probability_2.html#prediction-and-inference",
    "title": "17  Probability II",
    "section": "17.2 Prediction and Inference",
    "text": "17.2 Prediction and Inference\nAt this point in the course, we’ve spent a great deal of time working with models. When we first introduced the idea of modeling a few weeks ago, we did so in the context of prediction: using models to make predictions about unseen data.\nAnother reason we might build models is to better understand complex phenomena in the world around us. Inference is the task of using a model to infer the true underlying relationships between the feature and response variables. If we are working with a set of housing data, prediction might ask: given the attributes of a house, how much is it worth? Inference might ask: how much does having a local park impact the value of a house?\nA major goal of inference is to draw conclusions about the full population of data, given only a random sample. To do this, we aim to estimate the value of a parameter, which is a numerical function of the population (for example, the population mean \\(\\mu\\)). We use a collected sample to construct a statistic, which is a numerical function of the random sample (for example, the sample mean \\(\\bar{X}_n\\)). It’s helpful to think “p” for “parameter” and “population,” and “s” for “sample” and “statistic.”\nSince the sample represents a random subset of the population, any statistic we generate will likely deviate from the true population parameter. We say that the sample statistic is an estimator of the true population parameter. Notationally, the population parameter is typically called \\(\\theta\\), while its estimator is denoted by \\(\\hat{\\theta}\\).\nTo address our inference question, we aim to construct estimators that closely estimate the value of the population parameter. We evaluate how “good” an estimator is by answering three questions:\n\nDo we get the right answer for the parameter, on average?\nHow variable is the answer?\nHow close is our answer to the parameter?\n\nThe bias of an estimator is how far off it is from the parameter, on average.\n\\[\\text{Bias}(\\hat{\\theta}) = \\mathbb{E}[\\hat{\\theta} - \\theta] = \\mathbb{E}[\\hat{\\theta}] - \\theta\\]\nFor example, the bias of the sample mean as an estimator of the population mean is:\n\\[\\begin{align}\\mathbb{E}[\\bar{X}_n - \\mu]\n&= \\mathbb{E}[\\frac{1}{n}\\sum_{i=1}^n (X_i)] - \\mu \\\\\n&= \\frac{1}{n}\\sum_{i=1}^n \\mathbb{E}[X_i] - \\mu \\\\\n&= \\frac{1}{n} (n\\mu) - \\mu \\\\\n&= 0\\end{align}\\]\nBecause its bias is equal to 0, the sample mean is said to be an unbiased estimator of the population mean.\nThe variance of an estimator is a measure of how much the estimator tends to vary from its mean value.\n\\[\\text{Var}(\\hat{\\theta}) = \\mathbb{E}\\left[(\\hat{\\theta} - \\mathbb{E}[\\hat{\\theta}])^2 \\right]\\]\nThe mean squared error measures the “goodness” of an estimator by incorporating both the bias and variance. Formally, it is defined:\n\\[\\text{MSE}(\\hat{\\theta}) = \\mathbb{E}\\left[(\\hat{\\theta} - \\theta)^2\n\\right]\\]\nIf we denote the bias as \\(b = \\mathbb{E}[\\hat{\\theta}] - \\theta\\), the MSE can be re-expressed to show its relationship to bias and variance.\n\\[\\begin{align}\n\\text{MSE}(\\hat{\\theta}) &= \\mathbb{E}\\left[(\\hat{\\theta} - \\mathbb{E}[\\hat{\\theta}] + b)^2 \\right] \\\\\n&= \\mathbb{E}\\left[(\\hat{\\theta} - \\mathbb{E}[\\hat{\\theta}])^2\\right] + b^2 + 2b\\mathbb{E}\\left[\\hat{\\theta} - \\mathbb{E}[\\hat{\\theta}]\\right] \\\\\n&= \\mathbb{E}\\left[(\\hat{\\theta} - \\mathbb{E}[\\hat{\\theta}])^2\\right] + b^2 + 2b\\mathbb{E}[\\hat{\\theta}] - 2b\\mathbb{E}[\\hat{\\theta}] \\\\\n&= \\text{Var}(\\hat{\\theta}) + b^2\n\\end{align}\\]"
  },
  {
    "objectID": "probability_2/probability_2.html#modeling-as-estimation",
    "href": "probability_2/probability_2.html#modeling-as-estimation",
    "title": "17  Probability II",
    "section": "17.3 Modeling as Estimation",
    "text": "17.3 Modeling as Estimation\nNow that we’ve established the idea of an estimator, let’s see how we can apply this learning to the modeling process. To do so, we’ll take a moment to formalize our data collection and models in the language of random variables.\nSay we are working with an input variable, \\(x\\), and a response variable, \\(Y\\). We assume that \\(Y\\) and \\(x\\) are linked by some relationship \\(g\\) – in other words, \\(Y = g(x)\\). \\(g\\) represents some “universal truth” or “law of nature” that defines the underlying relationship between \\(x\\) and \\(Y\\).\nAs data scientists, we have no way of directly “seeing” the underlying relationship \\(g\\). The best we can do is collect observed data out in the real world to try to understand this relationship. Unfortunately, the data collection process will always have some inherent error (think of the randomness you might encounter when taking measurements in a scientific experiment). We say that each observation comes with some random error or noise term, \\(\\epsilon\\). This error is assumed to be a random variable with expectation 0, variance \\(\\sigma^2\\), and be IID across each observation. The existence of this random noise means that our observations, \\(Y(x)\\), are random variables.\n\\[\\text{True relationship: }Y = g(x)\\]\n\\[\\text{Observed relationship: }Y = g(x) + \\epsilon\\]\n\nWe can only observe our random sample of data, represented by the blue points above. From this sample, we want to estimate the true relationship \\(g\\). We do this by constructing the model \\(\\hat{Y}(x)\\) to estimate \\(g\\).\n\nIf we assume that the true relationship \\(g\\) is linear, we can re-express this goal in a slightly different way. The observed data is generated by the relationship:\n\\[Y(x) = g(x) + \\epsilon = \\theta_0 + \\theta_1 x_1 + \\ldots + \\theta_p x_p + \\epsilon\\]\nWe aim to train a model to obtain estimates for each \\(\\theta_i\\), which we refer to as \\(\\hat{\\theta}_i\\). Because \\(\\hat{Y}\\) is a fit to random data, we say that it is also a random variable.\n\\[\\hat{Y}(x) = \\hat{\\theta}_0 + \\hat{\\theta}_1 x_1 + \\ldots + \\hat{\\theta}_p x_p\\]\nNotice that \\(Y\\) is dependent on \\(\\epsilon\\), which means that \\(Y\\) is a random variable itself. Additionally, the parameters of our model, \\(\\hat{Y}\\), is also dependent on this randomnness, which means our predictor is random itself."
  },
  {
    "objectID": "inference_causality/inference_causality.html#bias-variance-tradeoff",
    "href": "inference_causality/inference_causality.html#bias-variance-tradeoff",
    "title": "19  Inference & Causality",
    "section": "19.1 Bias-Variance Tradeoff",
    "text": "19.1 Bias-Variance Tradeoff\nRecall the model and the data we generated from that model from the last section:\n\\[\\text{True relationship: }Y = g(x)\\]\n\\[\\text{Observed relationship: }Y = g(x) + \\epsilon\\]\n\nRemember we can only observe our random sample of data, represented by the blue points above. From this sample, we want to estimate the true relationship \\(g\\). We do this by constructing the model \\(\\hat{Y}(x)\\) to estimate \\(g\\).\n\nRecall that the observed relationship and our fitted model are random. With this random variables framework in hand, we’re now ready to understand how model complexity can finetune our model’s performance.\nTo evaluate our model’s performance, we’ve previously considered the MSE of our model across a single sample of observed data. Now that we’ve reframed our model \\(\\hat{Y}\\) and observations \\(Y\\) as random variables, we’ll use a theoretical approach to better understand the model’s error. Model risk is defined as the mean square prediction error of the random variable \\(\\hat{Y}\\). It is an expectation across all samples we could have possibly gotten when fitting the model. Model risk considers the model’s performance on any sample that is theoretically possible, rather than the specific data that we have collected.\n\\[\\text{Model risk }=\\mathbb{E}\\left[(Y-\\hat{Y})^2\\right]\\]\nWhat is the origin of the error encoded by model risk? Recall the data generation process we established earlier. There is the true underlying relationship \\(g\\), observed data (with random noise) \\(Y\\), and model \\(\\hat{Y}\\).\n\nTo better understand model risk, we’ll zoom in on a single data point in the plot above.\n\nRemember that \\(\\hat{Y}(x)\\) is a random variable – it is the prediction made for \\(x\\) after being fit on the specific sample used for training. If we had used a different sample for training, a different prediction might have been made for this value of \\(x\\). To capture this, the diagram above considers both the prediction \\(\\hat{Y}(x)\\) made for a particular random training sample, and the expected prediction across all possible training samples, \\(\\mathbb{E}[\\hat{Y}(x)]\\).\nWe can use this simplified diagram to break down the model risk into smaller components. First, start by considering the error on a single prediction, \\(Y(x)-\\hat{Y}(x)\\).\n\nWe can identify three components to this error.\n\nThat is, the error can be written as:\n\\[Y(x)-\\hat{Y}(x) = \\epsilon + \\left(g(x)-\\mathbb{E}\\left[\\hat{Y}(x)\\right]\\right) + \\left(\\mathbb{E}\\left[\\hat{Y}(x)\\right] - \\hat{Y}(x)\\right)\\] \\[\\newline   \\] The model risk is the expected square of the expression above, \\(\\mathbb{E}\\left[(Y(x)-\\hat{Y}(x))^2\\right]\\). If we work through the algebra, we find the following relationship:\n\\[\\mathbb{E}\\left[(Y(x)-\\hat{Y}(x))^2\\right]=\\sigma^2 + \\left(\\mathbb{E}\\left[\\hat{Y}(x)\\right]-g(x)\\right)^2 + \\text{Var}(\\hat{Y}(x))\\]\nThis expression may look complicated at first blush, but we’ve actually already defined each term earlier this lecture! Let’s break things down.\n\nThe model risk, \\(\\mathbb{E}\\left[(Y(x)-\\hat{Y}(x))^2\\right]\\), is the mean squared prediction error of the model.\nThe observation variance, \\(\\sigma^2\\), is the variance of the random noise in the observations. It describes how variable the random error \\(\\epsilon\\) is for each observation.\nThe model bias, \\(\\mathbb{E}\\left[\\hat{Y}(x)\\right]-g(x)\\), is how “off” the \\(\\hat{Y}(x)\\) is as an estimator of the true underlying relationship \\(g(x)\\).\nThe model variance, \\(\\text{Var}(\\hat{Y}(x))\\), describes how much the prediction \\(\\hat{Y}(x)\\) tends to vary when we fit the model on different samples.\n\nThis means that we can simplify the statement above.\n\\[\\text{Model risk = observation variance + (model bias)}^2 \\text{+ model variance}\\]\nThis is known as the bias-variance tradeoff. What does it mean? Remember that the model risk is a measure of the model’s performance. Our goal in building models is to keep model risk low; this means that we will want to ensure that each component of model risk is kept at a low value.\nObservation variance is an inherent, random part of the data collection process. We aren’t able to reduce the observation variance, so we’ll focus our attention to the model bias and model variance.\nIn the Feature Engineering lecture, we considered the issue of overfitting. We saw that the model’s error or bias tends to decrease as model complexity increases – if we design a highly complex model, it will tend to make predictions that are closer to the true relationship \\(g\\). At the same time, model variance tends to increase as model complexity increases: a complex model may overfit to the training data, meaning that small differences in the random samples used for training lead to large differences in the fitted model. We have a problem. To reduce model risk, we could decrease model bias by increasing the model’s complexity, which would lead to an increase in model variance. Alternatively, we could decrease model variance by decreasing the model’s complexity – at the cost of increased bias.\n\nWe need to strike a balance. Our goal in model creation is to use a complexity level that is high enough to keep bias low, but not so high that model variance is large. We’ll explore how to do this using regularization in the next lecture."
  },
  {
    "objectID": "inference_causality/inference_causality.html#inference-for-regression",
    "href": "inference_causality/inference_causality.html#inference-for-regression",
    "title": "19  Inference & Causality",
    "section": "19.2 Inference for Regression",
    "text": "19.2 Inference for Regression\nWe’ve spent a great deal of time now using random variables to explore model performance. It turns out that our work in probability can help us understand another aspect of model design – interpreting what exactly our fitted models can tell us about the world around us.\nRecall the framework we established earlier this lecture. If we assume that the underlying relationship between our observations and input features is linear, we can express this relationship in terms of the unknown, true model parameters \\(\\theta\\).\n\\[Y(x) = g(x) + \\epsilon = \\theta_0 + \\theta_1 x_1 + \\ldots + \\theta_p x_p + \\epsilon\\]\nOur model attempts to estimate each true parameter \\(\\theta_i\\) using the estimates \\(\\hat{\\theta}_i\\).\n\\[\\hat{Y}(x) = \\hat{\\theta}_0 + \\hat{\\theta}_1 x_1 + \\ldots + \\hat{\\theta}_p x_p\\]\nLet’s pause for a moment. At this point, we’re very used to working with the idea of a model parameter. But what exactly does each coefficient \\(\\theta_i\\) actually mean? We can think of each \\(\\theta_i\\) as a slope of the linear model – if all other variables are held constant, a unit change in \\(x_i\\) will result in a \\(\\theta_i\\) change in \\(Y(x)\\). Broadly speaking, a large value of \\(\\theta_i\\) means that the feature \\(x_i\\) has a large effect on the response; conversely, a small value of \\(\\theta_i\\) means that \\(x_i\\) has little effect on the response. In the extreme case, if the true parameter \\(\\theta_i\\) is 0, then the feature \\(x_i\\) has no effect on \\(Y(x)\\).\nIf the true parameter \\(\\theta_i\\) for a particular feature is 0, this tells us something pretty significant about the world – there is no underlying relationship between \\(x_i\\) and \\(Y(x)\\)! How then, can we test if a parameter is 0? As a baseline, we go through our usual process of drawing a sample, using this data to fit a model, and computing an estimate \\(\\hat{\\theta}_i\\). However, we need to also consider the fact that if our random sample had come out differently, we may have found a different result for \\(\\hat{\\theta}_i\\). To infer if the true parameter \\(\\theta_i\\) is 0, we want to draw our conclusion from the distribution of \\(\\hat{\\theta}_i\\) estimates we could have drawn across all other random samples.\nTo do this, we’ll use an inference technique called hypothesis testing. This concept was introduced back in Data 8. You may find it helpful to review the hypothesis testing method to refresh your memory.\nWe’ll work with the snowy plover dataset throughout this section.\n\nimport pandas as pd\neggs = pd.read_csv(\"data/snowy_plover.csv\")\neggs.head(5)\n\n\n\n\n\n  \n    \n      \n      egg_weight\n      egg_length\n      egg_breadth\n      bird_weight\n    \n  \n  \n    \n      0\n      7.4\n      28.80\n      21.84\n      5.2\n    \n    \n      1\n      7.7\n      29.04\n      22.45\n      5.4\n    \n    \n      2\n      7.9\n      29.36\n      22.48\n      5.6\n    \n    \n      3\n      7.5\n      30.10\n      21.71\n      5.3\n    \n    \n      4\n      8.3\n      30.17\n      22.75\n      5.9\n    \n  \n\n\n\n\nOur goal will be to predict the weight of a newborn plover chick, which we assume follows the true relationship below.\n\\[\\text{bird_weight} = \\theta_0 + \\theta_1 \\text{egg_weight} + \\theta_2 \\text{egg_length} + \\theta_3 \\text{egg_breadth} + \\epsilon\\]\nSay we wish to determine if the egg_weight impacts the bird_weight of a chick – we want to infer if \\(\\theta_1\\) is equal to 0.\nFirst, we define our hypotheses:\n\nNull hypothesis: the true parameter \\(\\theta_1\\) is 0\nAlternative hypothesis: the true parameter \\(\\theta_1\\) is not 0\n\nNext, we use our data to fit a model that approximates the relationship above. This gives us the observed value of \\(\\hat{\\theta}_1\\) found from our data.\n\n\nCode\nfrom sklearn.linear_model import LinearRegression\n\nX = eggs[[\"egg_weight\", \"egg_length\", \"egg_breadth\"]]\nY = eggs[\"bird_weight\"]\n\nmodel = LinearRegression()\n\nmodel.fit(X, Y)\n\n# This gives an array containing the fitted model parameter estimates\nthetas = model.coef_\n\n# Put the parameter estimates in a nice table for viewing\npd.DataFrame({\"theta_hat\":[model.intercept_, thetas[0], thetas[1], thetas[2]]}, index=[\"theta_0\", \"theta_1\", \"theta_2\", \"theta_3\"])\n\n\n\n\n\n\n  \n    \n      \n      theta_hat\n    \n  \n  \n    \n      theta_0\n      -4.605670\n    \n    \n      theta_1\n      0.431229\n    \n    \n      theta_2\n      0.066570\n    \n    \n      theta_3\n      0.215914\n    \n  \n\n\n\n\nWe now have the value of \\(\\hat{\\theta}_1\\) when considering the single sample of data that we have. To get a sense of how this estimate might vary if we were to draw different random samples, we will use bootstrapping. To construct a bootstrap sample, we will draw a resample from the collected data that:\n\nHas the same sample size as the collected data, and\nIs drawn with replacement (this ensures that we don’t draw the exact same sample every time!)\n\nWe draw a bootstrap sample, use this sample to fit a model, and record the result for \\(\\hat{\\theta}_1\\) on this bootstrapped sample. We then repeat this process many times to generate a bootstrapped distribution of \\(\\hat{\\theta}_1\\). This gives us an estimate of what the true distribution of \\(\\hat{\\theta}_1\\) across all possible samples might look like.\n\n# Set a random seed so you generate the same random sample as staff\n# In the \"real world\", we wouldn't do this\nimport numpy as np\nnp.random.seed(1337)\n\n# Set the sample size of each bootstrap sample\nn = len(eggs)\n\n# Create a list to store all the bootstrapped estimates\nestimates = []\n\n# Generate a bootstrap resample from `eggs` and find an estimate for theta_1 using this sample. \n# Repeat 10000 times.\nfor i in range(10000):\n    bootstrap_resample = eggs.sample(n, replace=True)\n    X_bootstrap = bootstrap_resample[[\"egg_weight\", \"egg_length\", \"egg_breadth\"]]\n    Y_bootstrap = bootstrap_resample[\"bird_weight\"]\n    \n    bootstrap_model = LinearRegression()\n    bootstrap_model.fit(X_bootstrap, Y_bootstrap)\n    bootstrap_thetas = bootstrap_model.coef_\n    \n    estimates.append(bootstrap_thetas[0])\n\n\n\nCode\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(dpi=120)\nsns.histplot(estimates, stat=\"density\")\nplt.xlabel(r\"$\\hat{\\theta}_1$\")\nplt.title(r\"Bootstrapped estimates $\\hat{\\theta}_1$\");\n\n\n\n\n\nNow, we have a sense of how \\(\\hat{\\theta}_1\\) might vary across different random samples. How does this help us understand if the true parameter \\(\\theta_1\\) is 0 or not? We’ll use an approximate confidence interval. Recall from Data 8 that a x% confidence interval is a range of values where we are x% confident that the interval contains the true parameter. In other words, if we repeated the bootstrapping process above many times, we’d expect the x% confidence interval to contain the true value of \\(\\theta_1\\) about x% of the time.\nFor our purposes, we’ll consider the approximate 95% confidence interval. Because of the duality of confidence intervals and hypothesis tests, we reject the null hypothesis at a cutoff level of 5% if 0 is not contained in the 95% confidence interval for \\(\\hat{\\theta}_1\\).\nTo create a 95% confidence interval, we compute the 2.5th and 97.5th percentiles of our bootstrapped estimates of \\(\\theta_1\\).\n\nlower = np.percentile(estimates, 2.5)\nupper = np.percentile(estimates, 97.5)\n\nconf_interval = (lower, upper)\nconf_interval\n\n(-0.258648119568487, 1.1034243854204047)\n\n\nWe find that our bootstrapped approximate 95% confidence interval for \\(\\theta_1\\) is \\([-0.259, 1.103]\\). Immediately, we can see that 0 is contained in this interval – this means that we cannot conclude that \\(\\theta_1\\) is non-zero! More formally, we cannot reject the null hypothesis (that \\(\\theta_1\\) is 0) under a 5% cutoff.\nWe can repeat this process to construct 95% confidence intervals for the other parameters of the model.\n\n\nCode\nnp.random.seed(1337)\n\ntheta_0_estimates = []\ntheta_1_estimates = []\ntheta_2_estimates = []\ntheta_3_estimates = []\n\n\nfor i in range(10000):\n    bootstrap_resample = eggs.sample(n, replace=True)\n    X_bootstrap = bootstrap_resample[[\"egg_weight\", \"egg_length\", \"egg_breadth\"]]\n    Y_bootstrap = bootstrap_resample[\"bird_weight\"]\n    \n    bootstrap_model = LinearRegression()\n    bootstrap_model.fit(X_bootstrap, Y_bootstrap)\n    bootstrap_theta_0 = bootstrap_model.intercept_\n    bootstrap_theta_1, bootstrap_theta_2, bootstrap_theta_3 = bootstrap_model.coef_\n    \n    theta_0_estimates.append(bootstrap_theta_0)\n    theta_1_estimates.append(bootstrap_theta_1)\n    theta_2_estimates.append(bootstrap_theta_2)\n    theta_3_estimates.append(bootstrap_theta_3)\n    \ntheta_0_lower, theta_0_upper = np.percentile(theta_0_estimates, 2.5), np.percentile(theta_0_estimates, 97.5)\ntheta_1_lower, theta_1_upper = np.percentile(theta_1_estimates, 2.5), np.percentile(theta_1_estimates, 97.5)\ntheta_2_lower, theta_2_upper = np.percentile(theta_2_estimates, 2.5), np.percentile(theta_2_estimates, 97.5)\ntheta_3_lower, theta_3_upper = np.percentile(theta_3_estimates, 2.5), np.percentile(theta_3_estimates, 97.5)\n\n# Make a nice table to view results\npd.DataFrame({\"lower\":[theta_0_lower, theta_1_lower, theta_2_lower, theta_3_lower], \"upper\":[theta_0_upper, \\\n                theta_1_upper, theta_2_upper, theta_3_upper]}, index=[\"theta_0\", \"theta_1\", \"theta_2\", \"theta_3\"])\n\n\n\n\n\n\n  \n    \n      \n      lower\n      upper\n    \n  \n  \n    \n      theta_0\n      -15.278542\n      5.161473\n    \n    \n      theta_1\n      -0.258648\n      1.103424\n    \n    \n      theta_2\n      -0.099138\n      0.208557\n    \n    \n      theta_3\n      -0.257141\n      0.758155\n    \n  \n\n\n\n\nSomething’s off here. Notice that 0 is included in the 95% confidence interval for every parameter of the model. Using the interpretation we outlined above, this would suggest that we can’t say for certain that any of the input variables impact the response variable! This makes it seem like our model can’t make any predictions – and yet, each model we fit in our bootstrap experiment above could very much make predictions of \\(Y\\).\nHow can we explain this result? Think back to how we first interpreted the parameters of a linear model. We treated each \\(\\theta_i\\) as a slope, where a unit increase in \\(x_i\\) leads to a \\(\\theta_i\\) increase in \\(Y\\), if all other variables are held constant. It turns out that this last assumption is very important. If variables in our model are somehow related to one another, then it might not be possible to have a change in one of them while holding the others constant. This means that our interpretation framework is no longer valid! In the models we fit above, we incorporated egg_length, egg_breadth, and egg_weight as input variables. These variables are very likely related to one another – an egg with large egg_length and egg_breadth will likely be heavy in egg_weight. This means that the model parameters cannot be meaningfully interpreted as slopes.\nTo support this conclusion, we can visualize the relationships between our feature variables. Notice the strong positive association between the features.\n\n\nCode\nsns.pairplot(eggs[[\"egg_length\", \"egg_breadth\", \"egg_weight\"]]);\n\n\n\n\n\nThis issue is known as colinearity, sometimes also called multicolinearity. Colinearity occurs when one feature can be predicted fairly accurately by a linear combination of the other features, which happens when one feature is highly correlated with the others.\nWhy is colinearity a problem? Its consequences span several aspects of the modeling process:\n\nSlopes can’t be interpreted for an inference task\nIf features strongly influence one another, even small changes in the sampled data can lead to large changes in the estimated slopes\nIf one feature actually is a linear combination of the other features, the design matrix will not be full rank and \\(\\mathbb{X}^T\\mathbb{X}\\) is not invertible. This means that least squares does not have a single solution\n\nThe take-home point is that we need to be careful with what features we select for modeling. If two features likely encode similar information, it is often a good idea to choose only one of them as an input variable.\nLet us now consider a more interpretable model: we instead assume a true relationship using only egg weight:\n\\[f_\\theta(x) = \\theta_0 + \\theta_1 \\text{egg_weight} + \\epsilon\\]\n\n\nCode\nX_int = eggs[[\"egg_weight\"]]\nY_int = eggs[\"bird_weight\"]\n\nmodel_int = LinearRegression()\n\nmodel_int.fit(X_int, Y_int)\n\n# This gives an array containing the fitted model parameter estimates\nthetas_int = model_int.coef_\n\n# Put the parameter estimates in a nice table for viewing\npd.DataFrame({\"theta_hat\":[model_int.intercept_, thetas_int[0]]}, index=[\"theta_0\", \"theta_1\"])\n\n\n\n\n\n\n  \n    \n      \n      theta_hat\n    \n  \n  \n    \n      theta_0\n      -0.058272\n    \n    \n      theta_1\n      0.718515\n    \n  \n\n\n\n\n\n# Set a random seed so you generate the same random sample as staff\n# In the \"real world\", we wouldn't do this\nnp.random.seed(1337)\n\n# Set the sample size of each bootstrap sample\nn = len(eggs)\n\n# Create a list to store all the bootstrapped estimates\nestimates_int = []\n\n# Generate a bootstrap resample from `eggs` and find an estimate for theta_1 using this sample. \n# Repeat 10000 times.\nfor i in range(10000):\n    bootstrap_resample_int = eggs.sample(n, replace=True)\n    X_bootstrap_int = bootstrap_resample_int[[\"egg_weight\"]]\n    Y_bootstrap_int = bootstrap_resample_int[\"bird_weight\"]\n    \n    bootstrap_model_int = LinearRegression()\n    bootstrap_model_int.fit(X_bootstrap_int, Y_bootstrap_int)\n    bootstrap_thetas_int = bootstrap_model_int.coef_\n    \n    estimates_int.append(bootstrap_thetas_int[0])\n\nplt.figure(dpi=120)\nsns.histplot(estimates_int, stat=\"density\")\nplt.xlabel(r\"$\\hat{\\theta}_1$\")\nplt.title(r\"Bootstrapped estimates $\\hat{\\theta}_1$ Under the Interpretable Model\");\n\n\n\n\nNotice how the interpretable model performs almost as well as our other model:\n\n\nCode\nfrom sklearn.metrics import mean_squared_error\n\nrmse = mean_squared_error(Y, model.predict(X))\nrmse_int = mean_squared_error(Y_int, model_int.predict(X_int))\nprint(f'RMSE of Original Model: {rmse}')\nprint(f'RMSE of Interpretable Model: {rmse_int}')\n\n\nRMSE of Original Model: 0.04547085380275768\nRMSE of Interpretable Model: 0.04649394137555684\n\n\nYet, the confidence interval for the true parameter \\(\\theta_{1}\\) does not contain zero.\n\n\nCode\nlower_int = np.percentile(estimates_int, 2.5)\nupper_int = np.percentile(estimates_int, 97.5)\n\nconf_interval_int = (lower_int, upper_int)\nconf_interval_int\n\n\n(0.6029335250209632, 0.8208401738546206)\n\n\nIn retrospect, it’s no surprise that the weight of an egg best predicts the weight of a newly-hatched chick.\nA model with highly correlated variables prevents us from interpreting how the variables are related to the prediction.\n\n19.2.1 Reminder: Assumptions Matter\nKeep the following in mind: All inference assumes that the regression model holds.\n\nIf the model doesn’t hold, the inference might not be valid.\nIf the assumptions of the bootstrap don’t hold…\n\nSample size n is large\nSample is representative of population distribution (drawn IID, unbiased) …then the results of the bootstrap might not be valid."
  },
  {
    "objectID": "inference_causality/inference_causality.html#correlation-and-causation",
    "href": "inference_causality/inference_causality.html#correlation-and-causation",
    "title": "19  Inference & Causality",
    "section": "19.3 Correlation and Causation",
    "text": "19.3 Correlation and Causation\nLet us consider some questions in an arbitrary regression problem.\nWhat does \\(\\theta_{j}\\) mean in our regression?\n\nHolding other variables fixed, how much should our prediction change with \\(X_{j}\\)?\n\nFor simple linear regression, this boils down to the correlation coefficient\n\nDoes having more \\(x\\) predict more \\(y\\) (and by how much)?\n\nExamples: Are homes with granite countertops worth more money? Is college GPA higher for students who win a certain scholarship? Are breastfed babies less likely to develop asthma? Do cancer patients given some aggressive treatment have a higher 5-year survival rate? Are people who smoke more likely to get cancer?\nThese sound like causal questions, but they are not!\n\n19.3.1 Prediction vs Causation\nQuestions about correlation / prediction:\n\nAre homes with granite countertops worth more money?\nIs college GPA higher for students who win a certain scholarship?\nAre breastfed babies less likely to develop asthma?\nDo cancer patients given some aggressive treatment have a higher 5-year survival rate?\nAre people who smoke more likely to get cancer?\n\nQuestions about causality:\n\nHow much do granite countertops raise the value of a house?\nDoes getting the scholarship improve students’ GPAs?\nDoes breastfeeding protect babies against asthma?\nDoes the treatment improve cancer survival?\nDoes smoking cause cancer?\n\nCausal questions are about the effects of interventions (not just passive observation)\n\nRegression coefficients sometimes called “effects” – can be deceptive!\n\nOnly one of these questions can be answered using the data alone:\n\nPredictive question: Are breastfed babies healthier?\nCausal question: Does breastfeeding improve babies’ health?\n\nPossible explanations for why breastfed babies are healthier on average:\n\nCausal effect: breastfeeding makes babies healthier\nReverse causality: healthier babies more likely to successfully breastfeed\nCommon cause: healthier / richer parents have healthier babies and are more likely to breastfeed\n\nWe cannot tell which explanations are true (or to what extent) just by observing (\\(x\\),\\(y\\)) pairs\nCausal questions implicitly involve counterfactuals:\n\nWould the same breastfed babies have been less healthy if they hadn’t been breastfed?\nExplanation 1 implies they would be, explanations 2 and 3 do not\n\n\n\n19.3.2 Confounders\n\nA confounder is a variable that affects both T and Y, distorting the correlation between them (e.g. rich parents → breastfeeding, baby’s health) Can be measured covariate, or unmeasured variable we don’t know about\nConfounders generally cause problems\nCommon assumption: all confounders are observed (ignorability)\n\n\n19.3.3 Terminology\nLet us define some terms that will help us understand causal effects.\nIn prediction, we had two kinds of variables\n\nResponse (\\(Y\\)): what we are trying to predict\nPredictors (\\(X\\)): inputs to our prediction\n\nMore kinds of variables in causal inference\n\nResponse (\\(Y\\)): the outcome of interest\nTreatment (\\(T\\)): the variable we might intervene on\nCovariate (\\(X\\)): other variables we measured that may affect \\(T\\) and/or \\(Y\\)\n\nFor this lecture, \\(T\\) is a binary (0/1) variable:\n\n\\(T=1\\) is usually called treatment, and \\(T=0\\) is usually called control\ne.g., breastfed or not, smoker or not\n\n\n\n19.3.4 Neyman-Rubin Causal Model\nCausal questions are about counterfactuals:\n\nWhat would have happened if T were different?\nWhat will happen if we set T differently in the future?\n\nWe assume every individual has two potential outcomes\n\n\\(Y_{i}(1)\\): value of \\(y_{i}\\) if \\(T_{i} = 1\\) (treated outcome)\n\\(Y_{i}(0)\\): value of \\(y_{i}\\) if \\(T_{i} = 0\\) (control outcome)\n\nFor each individual in the data set, we observe:\n\nCovariates \\(x_{i}\\)\nTreatment \\(T_{i}\\)\nResponse \\(y_{i} = Y_{i}(T_{i})\\)\n\nWe will assume (\\(x_{i}\\), \\(T_{i}\\), \\(y_{i} = Y_{i}(T_{i})\\)) tuples iid for \\(i = 1,..., n\\)\n\n\n19.3.5 Average Treatment Effect\nFor each individual, the treatment effect is \\(Y_{i}(1)-Y_{i}(0)\\)\nMost common thing to estimate is the Average Treatment Effect (ATE)\n\\[ATE = \\mathbb{E}[Y(1)-Y(0)] = \\mathbb{E}[Y(1)] - \\mathbb{E}[Y(0)]\\]\nCan we just take the sample mean?\n\\[\\hat{ATE} = \\frac{1}{n}\\sum_{i=1}^{n}Y_{i}(1) - Y_{i}(0)\\]\nWe cannot. Why? We only observe one of \\(Y_{i}(1)\\), \\(Y_{i}(0)\\).\nFundamental problem of causal inference: We only ever observe one potential outcome\nTo draw causal conclusions, we need some causal assumption relating the observed to the unobserved units\nInstead of \\(\\frac{1}{n}\\sum_{i=1}^{n}Y_{i}(1) - Y_{i}(0)\\), what if we took the difference between the sample mean for each group?\n\\[\\hat{ATE} = \\frac{1}{n_{1}}\\sum_{i: T_{i} = 1}{Y_{i}(1)} - \\frac{1}{n_{0}}\\sum_{i: T_{i} = 0}{Y_{i}(0)} = \\frac{1}{n_{1}}\\sum_{i: T_{i} = 1}{y_{i}} - \\frac{1}{n_{0}}\\sum_{i: T_{i} = 0}{y_{i}}\\]\nIs this estimator of \\(ATE\\) unbiased? Thus, this proposed \\(\\hat{ATE}\\) is not suitable for our purposes.\nif treatment assignment comes from random coin flips, then the treated units are an iid random sample of size \\(n_{1}\\) from the population of \\(Y_{i}(1)\\).\nThis means that,\n\\[\\mathbb{E}[\\frac{1}{n_{1}}\\sum_{i: T_{i} = 1}{y_{i}}] = \\mathbb{E}[Y_{i}(1)]\\]\nSimilarly,\n\\[\\mathbb{E}[\\frac{1}{n_{0}}\\sum_{i: T_{i} = 0}{y_{i}}] = \\mathbb{E}[Y_{i}(0)]\\]\nwhich allows us to conclude that \\(\\hat{ATE}\\) is an unbiased estimator of \\(ATE\\):\n\\[\\mathbb{E}[\\hat{ATE}] = ATE\\]\n\n\n19.3.6 Randomized Experiments\nHowever, often, randomy assigning treatments is impractical or unethical. For example, assigning a treatment of cigarettes would likely be impractical and unethical.\nAn alternative to bypass this issue is to utilize observational studies.\nExperiments:\n\nObservational Study:"
  },
  {
    "objectID": "inference_causality/inference_causality.html#covariate-adjustment",
    "href": "inference_causality/inference_causality.html#covariate-adjustment",
    "title": "19  Inference & Causality",
    "section": "19.4 Covariate Adjustment",
    "text": "19.4 Covariate Adjustment\nWhat to do about confounders?\n\nIgnorability assumption: all important confounders are in the data set!\n\nOne idea: come up with a model that includes them, such as:\n\\[Y_{i}(t) = \\theta_{0} + \\theta_{1}x_{1} + ... + \\theta_{p}x_{p} + \\tau{t} + \\epsilon\\]\nQuestion: what is the \\(ATE\\) in this model? \\(\\tau\\)\nApproach can work but is fragile. Breaks if:\n\nImportant covariates are missing or true dependence on \\(x\\) is nonlinear\nSometimes pejoratively called “casual inference”\n\n\n\n19.4.1 Covariate adjustment without parametric assumptions\nWhat to do about confounders?\n\nIgnorability assumption: all possible confounders are in the data set!\n\nOne idea: come up with a model that includes them, such as:\n\\[Y_{i}(t) = f_{\\theta}(x, t) + \\epsilon\\]\nThen:\n\\[ATE = \\frac{1}{n}\\sum_{i=1}^{n}{f_{\\theta}(x_i, 1) - f_{\\theta}(x_i, 0)}\\]\nWith enough data, we may be able to learn \\(f_{\\theta}\\) very accurately\n\nVery difficult if x is high-dimensional / functional form is highly nonlinear\nNeed additional assumption: overlap\n\n\n\n19.4.2 Other Methods\nCausal inference is hard, and covariate adjustment is often not the best approach\nMany other methods doing some combination of:\n\nModeling treatment T as a function of covariates x\nModeling the outcome y as a function of x, T\n\nWhat if we don’t believe in ignorability? Other methods look for a\n\nFavorite example: regression discontinuity"
  }
]