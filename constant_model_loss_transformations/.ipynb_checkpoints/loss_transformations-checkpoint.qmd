---
title: 'Constant Model, Loss, and Transformations'
execute:
  echo: true
format:
  html:
    code-fold: true
    code-tools: true
    toc: true
    toc-title: 'Constant Model, Loss, and Transformations'
    page-layout: full
    theme:
      - cosmo
      - cerulean
    callout-icon: false
jupyter: python3
---

::: {.callout-note collapse="true"}
## Learning Outcomes
* Do stuff
* Do other stuff
:::

Last time, we introduced the modeling process. We set up a framework to predict target variables as functions of our features, following a set workflow:

1. Choose a model
2. Choose a loss function
3. Fit the model
4. Evaluate model performance

To illustrate this process, we derived the optimal model parameters under simple linear regression with mean squared error as the empirical risk function. In this lecture, we'll continue familiarizing ourselves with the modeling process by finding the best model parameters under a new model. We'll also test out two different loss functions to understand how our choice of loss influences model design. Later on, we'll consider what happens when a linear model isn't the best choice to capture trends in our data – and what solutions there are to create better models.

## Constant Model + MSE

In today's lecture, our focus will be on the **constant model**. The constant model is slightly different from the simple linear regression model we've explored previously. Rather than generate predictions from an inputted feature variable, the constant model *predicts the same constant number every time.* We call this constant $\theta$.

$$\hat{y} = \theta$$

$\theta$ is the parameter of the constant model, just as $a$ and $b$ were the parameters in SLR. Our task now is to determine what value of $\theta$ represents the optimal model – in other words, what number should we guess each time to have the lowest possible average loss on our data?

Consider the case where L2 (squared) loss is used as the loss function and mean squared error is used as the empirical risk. At this stage, we're well into the modeling process:

1. Choose a model: constant model
2. Choose a loss function: L2 loss
3. Fit the model
4. Evaluate model performance

In Homework 5, you will fit the constant model under MSE risk to find that the best choice of $\theta$ is the **mean of the observed $y$ values**. In other words, $\hat{\theta} = \bar{y}$. 

Let's take a moment to interpret this result. Our optimal model parameter is the value of the parameter that minimizes the empirical risk. This minimum value of risk can be expressed:

$$R(\hat{\theta}) = \min_{\theta} R(\theta)$$

To restate the above in plain English: we are looking at the value of the risk function when it takes the best parameter as input. This optimal model parameter, $\hat{\theta}$, is the value of $\theta$ that minimizes the risk $R$.

For modeling purposes, we care less about the minimum value of risk, $R(\hat{\theta})$, and more about the *value of $\theta$* that results in this lowest average loss. In other words, we concern ourselves with finding the best parameter value such that:

$$\hat{\theta} = \underset{\theta}{\operatorname{\arg\min}}\:R(\theta)$$

That is, we want to find the **arg**ument $\theta$ that **min**imizes the risk function.

## Constant Model + MAE 

We see now that changing the model used for prediction leads to a wildly different result for the optimal model parameter. What happens if we instead change the loss function used in model evaluation?

This time, we will consider the constant model with L1 (absolute loss) as the loss function. This means that the average loss will be expressed as the mean absolute error. 

1. Choose a model: constant model
2. Choose a loss function: L1 loss
3. Fit the model
4. Evaluate model performance

To fit the model and find the optimal parameter value $\hat{\theta}$, follow the usual process of differentiating the risk function with respect to $\theta$, setting the derivative equal to zero, and solving for $\theta$. Writing this out in longhand:

$$\begin{align}
R(\theta) &= \frac{1}{n}\sum^{n}_{i=1} |y_i - \theta| \\
\frac{d}{d\theta} R(\theta) &= \frac{d}{d\theta} \left(\frac{1}{n} \sum^{n}_{i=1} |y_i - \theta| \right) \\
\frac{d}{d\theta} R(\theta) &= \frac{1}{n} \sum^{n}_{i=1} \frac{d}{d\theta} |y_i - \theta|
\end{align}$$

Here, we seem to have run into a problem: the derivative of an absolute value is undefined when the argument is 0 (i.e. when $y_i = \theta$). For now, we'll ignore this issue. It turns out that ignoring this case doesn't influence our final result.

To perform the derivative, consider two cases. When $\theta$ is *less than* $y_i$, the term $y_i - \theta$ will be positive and the absolute value has no impact. When $\theta$ is *greater than* $y_i$, the term $y_i - \theta$ will be negative. After applying the absolute value, we are left with $-(y_i - \theta) = \theta - y_i$. 

$$|y_i - \theta| = \begin{cases} y_i - \theta && \text{if}\:\theta \leq y_i \\ \theta - y_i && \text{if}\:\theta \geq y_i \end{cases}$$

Taking derivatives:

$$\frac{d}{d\theta} |y_i - \theta| = \begin{cases} -1 && \text{if}\:\theta \leq y_i \\ 1 && \text{if}\:\theta \geq y_i \end{cases}$$

This means that we obtain a different value for the derivative for datapoints where $\theta < y_i$ and where $\theta > y_i$. We can summarize this by saying:

$$\begin{align} \frac{d}{d\theta} R(\theta) &= \frac{1}{n} \sum^{n}_{i=1} \frac{d}{d\theta} |y_i - \theta| \\
&= \frac{1}{n} \left[\sum_{\theta < y_i} (-1) + \sum_{\theta > y_i} (+1) \right]
\end{align}$$

To finish finding the best value of $\theta$, set this derivative equal to zero and solve for $\theta$. You'll do this in Homework 5 to show that $\hat{\theta} = \text{median}(y)$.

## Comparing Loss Functions

Now, we've tried our hand at fitting a model under both MSE and MAE risk. How do the two results compare?

Let's consider a dataset where each entry represents the number of drinks sold at a bubble tea store each day. We'll fit a constant model to predict the number of drinks that will be sold tomorrow.

```{python}
#| code-fold: false
import numpy as np
drinks = np.array([20, 21, 22, 29, 33])
```

From our derivations above, we know that the optimal model parameter under MSE risk is the mean of the dataset. Under MAE risk, the optimal parameter is the median of the dataset. 

If we plot each empirical risk function across several possible values of $\theta$, we find that each $\hat{\theta}$ does indeed correspond to the lowest value of error:

<img src="images/error.png" alt='error' width='600'>

## Linear Transformations

